{"version":3,"sources":["Components/Balls.js","Components/Categories.js","Components/Display.js","App.js","reportWebVitals.js","index.js"],"names":["Balls","colors","balls","i","ball","document","createElement","classList","add","style","background","Math","floor","random","length","left","top","transform","width","height","push","body","append","forEach","el","ra","to","x","y","animate","duration","direction","fill","iterations","Infinity","easing","Categories","props","useState","backgroundColor","radioValue","setRadioValue","useEffect","setData","category","ButtonGroup","toggle","name","value","map","radio","idx","ToggleButton","className","type","variant","checked","onChange","e","currentTarget","Display","delivery","setDelivery","setup","display","styles","setStyles","data","id","src","alt","onClick","getJoke","App","options","method","url","params","contains","format","blacklistFlags","idRange","headers","axios","request","then","response","console","log","catch","error","alert","flexDirection","justifyContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.458fc189.chunk.js","sourcesContent":["// Some random colors\nconst Balls = () => {\n\n\nconst colors = [\"#3CC157\", \"#2AA7FF\", \"#1B1B1B\", \"#FCBC0F\", \"#F85F36\", \"yellow\", \"purple\"];\n\nconst numBalls = 50;\nconst balls = [];\n\nfor (let i = 0; i < numBalls; i++) {\n  let ball = document.createElement(\"div\");\n  ball.classList.add(\"ball\");\n  ball.style.background = colors[Math.floor(Math.random() * colors.length)];\n  ball.style.left = `${Math.floor(Math.random() * 100)}vw`;\n  ball.style.top = `${Math.floor(Math.random() * 100)}vh`;\n  ball.style.transform = `scale(${Math.random()})`;\n  ball.style.width = `${Math.random()}em`;\n  ball.style.height = ball.style.width;\n  \n  balls.push(ball);\n  document.body.append(ball);\n}\n\n// Keyframes\nballs.forEach((el, i, ra) => {\n  let to = {\n    x: Math.random() * (i % 2 === 0 ? -11 : 11),\n    y: Math.random() * 12\n  };\n\n  let anim = el.animate(\n    [\n      { transform: \"translate(0, 0)\" },\n      { transform: `translate(${to.x}rem, ${to.y}rem)` }\n    ],\n    {\n      duration: (Math.random() + 1) * 2000, // random duration\n      direction: \"alternate\",\n      fill: \"both\",\n      iterations: Infinity,\n      easing: \"ease-in-out\"\n    }\n  );\n});\nreturn null\n}\nexport default Balls","import React, { useState, useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { ButtonGroup, ToggleButton, radioValue, setRadioValue } from 'react-bootstrap'\n\nconst Categories = (props) => {\n\n    const [styles, setStyles] = useState({\n        colors: {\n            backgroundColor: 'red'\n        }\n    })\n    \n    const [radioValue, setRadioValue] = useState('Any');\n    \n    const radios = [\n        { name: 'Programming', value: 'Programming' },\n        { name: 'Dark', value: 'Dark' },\n        { name: 'Christmas', value: 'Christmas' },\n        { name: 'Random', value: 'Any' },\n    ];\n\n    useEffect(() => {\n        props.setData({category: radioValue})\n      },[radioValue]);\n\n    return (\n        <ButtonGroup toggle>\n        {radios.map((radio, idx) => (\n          <ToggleButton\n          className='button'\n            key={idx}\n            type=\"radio\"\n            variant=\"secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => setRadioValue(e.currentTarget.value)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n    )\n}\n\nexport default Categories","import React,{ useEffect, useState } from 'react'\nimport './styles.css'\nimport Categories from './Categories'\n// import { getJoke } from './API'\nconst Display = (props) => {\n\nconst [delivery, setDelivery] = useState('')\n\nconst [styles, setStyles] = useState({\n    setup: {\n    display: 'none',\n    backgroundColor: '#b025b9'\n        \n    },\n    delivery: {\n    display: 'none',\n    backgroundColor: '#4487cd'\n}\n  })\n  useEffect(() => {\n    if(props.data.setup != '') setStyles({setup:{display:'block', backgroundColor: '#b025b9'}})\n\n  },[props]);\n    const updateJoke = () => {\n        setStyles({delivery:{display:'none'}})\n        props.getJoke()\n        // setStyles({setup: {display:'block'}})\n    }\n    const TellMeClicked = () => {\n        setDelivery(props.data.delivery)\n\n        setStyles({delivery:{display:'block', backgroundColor: '#4487cd'},setup: {display:'block', backgroundColor: '#b025b9'}})    }\n\n    // getJoke()\n    return (\n        <>\n        <a><img id='logo' src=\"https://images.cooltext.com/5519296.png\" width=\"806\" height=\"115\" alt=\"Joke Generator\" /></a>\n        <div className='textbox'>\n            <Categories data={props.data} setData={props.setData} />\n        <p className='setup' style={styles.setup}>{props.data.setup}</p>\n        <p className='delivery' style={styles.delivery}>{delivery}</p>\n        <div className='buttons'>\n        <button className='button' id=\"blue\" onClick={TellMeClicked}>Tell me</button>\n        <button className='button' id=\"green\" onClick={() => updateJoke()}>Another Joke</button>\n        <button className='button' id=\"red\" onClick={() => props.Balls()}>Add More Balls</button>\n        </div>\n        </div>\n        </>\n    )\n}\n\nexport default Display","import React, { useEffect, useState } from 'react'\nimport axios from \"axios\";\nimport Balls from './Components/Balls'\nimport Categories from './Components/Categories'\n\nimport './App.css';\n// import { getJoke } from './Components/API'\nimport Display from './Components/Display'\n\nconst App = () => {\n  const [data, setData] = useState({\n    category: 'Any',\n    type: 'type',\n    setup: '',\n    delivery: '',\n  })\n\n  \n\n  const options = {\n    method: 'GET',\n    url: `https://jokeapi-v2.p.rapidapi.com/joke/${data.category}`,\n    params: {\n      contains: '',\n      format: 'json',\n      blacklistFlags: '',\n      idRange: '',\n      type: 'twopart'\n    },\n    headers: {\n      'x-rapidapi-key': 'cf00cd8fa6msh9ad184c1cef59cbp129983jsn7aafbe866814',\n      'x-rapidapi-host': 'jokeapi-v2.p.rapidapi.com'\n    }\n  };\n  \n  const getJoke = () => {\n\n   axios.request(options).then(function (response) {\n      console.log('success')\n      setData(response.data)\n      console.log(response.data)\n  }).catch(function (error) {\n      console.log('error')\n      console.error(error);\n      alert(\"Internal Error, Api may be offline. Try again.\")\n  });\n}\n\nuseEffect(() => {\n  // Update the document title using the browser API\n  getJoke()\n  Balls()\n},[]);\n\n  \n  \n  return (\n    <div className=\"App\"  style={{backgroundColor:'gainsboro', height: '100vh', display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>        \n        <Display data={data} setData={setData} Balls={Balls} getJoke={getJoke}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n// ReactDOM.render(<CountDisplay><App /></CountDisplay>, document.getElementById('root'))\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}